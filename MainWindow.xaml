<Window 
    x:Class="Jotter.MainWindow"
        Name="Jotter"
        Title="Jotter V 1.0.0"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Jotter"
        mc:Ignorable="d"
        WindowStartupLocation="Manual"
        WindowStyle="None"
        ResizeMode="CanResize"
        BorderBrush="Black"
        BorderThickness="5"
        AllowsTransparency="True"
        Height="600" 
        Width="450"
        >
    
    
    <!-- Window properties -->

    <Window.Resources>

        <!-- Start of applying a style to buttons for pressed and static. the colors are grey
        The style theme starts actually under style "ButtonClickTriggerStyle"
        -->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF656A6D"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC5CACC"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FFC5CACC"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonClickTriggerStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Start of applying a style to buttons for pressed and static. the colors are grey-->




        <!-- Start of resources for settings button 
        Make sure when you add image: Properties → BuildAction='Resource'-->
        <ImageBrush x:Name="rscHambugerMenu" x:Key="rscHambugerMenu" ImageSource="/build/Icos/hamburger-menu-icon-png-white-11.jpg" />
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF656A6D"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC5CACC"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FFC5CACC"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="SettingsBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource rscHambugerMenu}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true"/>
                            <Image x:Name="image" Source="/build/Icos/hamburger-menu-icon-png-white-11.jpg" Stretch="Uniform" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!-- Change the background color when mouse is over -->
                                <Setter TargetName="border2" Property="Background" Value="{StaticResource Button.MouseOver.Background1}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border2" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border2" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border2" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border2" Value="{StaticResource Button.Disabled.Border1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End of resources for settings button -->

        <!-- WIDTH of the scrollbar -->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="MinWidth" Value="10" />
            <Setter Property="Width" Value="10" />
        </Style>

    </Window.Resources>

    <!-- window chrome aka the non-client area.-->
    <WindowChrome.WindowChrome>
        <WindowChrome     
        CaptionHeight="1"  
        CornerRadius ="15"
        ResizeBorderThickness="6"         
        GlassFrameThickness="0"
        >
        </WindowChrome>
    </WindowChrome.WindowChrome>

    <!-- Window_MouseDown for dragging window since windowstyle = none-->
    <Grid x:Name="MainGrid" Row="0" MouseDown="Window_MouseDown" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>


        <!-- Header 
        Start with a dockpanel and buttons aligned and laid out. Styles are within.
        Header ends with text of the application name
        
        -->
        <DockPanel Grid.Row="0" Background="#FF333333" FlowDirection="LeftToRight" LastChildFill="False">
            <DockPanel DockPanel.Dock="Top"  LastChildFill="False" >
                <!-- Add/Remove note button -->
                <Button Style="{DynamicResource ButtonClickTriggerStyle}" Name="btnAddNote" Content="+" FontWeight="Bold" Click="AddNote_Click" DockPanel.Dock="Left" Width="40" Height="40" />
                <Button Style="{DynamicResource ButtonClickTriggerStyle}" Name="btnDeleteNote" Content="-" FontWeight="Bold" Click="DeleteNote_Click" DockPanel.Dock="Left" Width="40" Height="40"/>
                
                <!-- Exit app button -->
                <StackPanel Name="ExitDockPanel" DockPanel.Dock="Right">
                    <Button Style="{DynamicResource ButtonClickTriggerStyle}" Name="btnExit" FontWeight="Bold" Content="X" Click="ExitApp_Click" Width="40" Height="40" />
                </StackPanel>

                <!-- Settings hamburger button -->
                <StackPanel Name="SettingsDockPanel" DockPanel.Dock="Right" >
                    <Button Style="{DynamicResource SettingsBtnStyle}" Name="btnSettings" Background="{StaticResource rscHambugerMenu}" FontWeight="Bold" Click="AppSettings_Click" Width="40" Height="40" />
                </StackPanel>
            </DockPanel>
            
            <!-- Application title branding button -->
            <TextBlock Name="StickyNotesTitle" Padding="2,2,2,7" Text="Jotter" Foreground="White" FontSize="20" FontWeight="Bold"/>
<!-- 
Text="{Binding SearchValue,Mode=TwoWay,Delay=500,UpdateSourceTrigger=PropertyChanged}" 
-->

            <TextBox x:Name="NoteManagerSearch" 
                     Text="Search..."
                     
                    Tag="Search..."
                     Foreground="White" 
                     Background="{DynamicResource Button.MouseOver.Background}" 
                     BorderThickness="0,0,0,1" 
                     DockPanel.Dock="Right" 
                     FontFamily="Segoe UI Semibold" 
                     Width="171" 
                     Height="20" 
                     MinWidth="2" 
                     GotFocus="NoteManagerSearch_GotFocus" 
                     LostFocus="NoteManagerSearch_LostFocus" 
                     KeyUp="NoteManagerSearch_KeyUp"
                     />






        </DockPanel>
        <!-- End of Header -->



        <!-- Note Content -->
        <!-- if you don't want the background color to bleed into infinite, put back the MaxWidth="500" -->


                <!--  VirtualizingPanel.ScrollUnit="Pixel" smooth scrolling on .NET 7 and up! -->
            <ListView Name="MyNotesListView" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="1" SelectionMode="Single" ItemsSource="{Binding Notes}" SelectedItem="{Binding SelectedNote}"  ScrollViewer.HorizontalScrollBarVisibility="Hidden" FontFamily="Segoe UI Semibold" VirtualizingPanel.ScrollUnit="Pixel">
                <ListView.ContextMenu>
                    <ContextMenu Name="ContextOnItem">
                        <MenuItem Name="OpenNote"  Header="Open Note" Click="OpenNote_Click" />
                        <MenuItem Name="DelNote"  Header="DeleteThisNote" Click="DeleteNoteFromContextMenu_Click" />
                    </ContextMenu>
                </ListView.ContextMenu>

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <EventSetter Event="MouseDoubleClick" Handler="Note_DoubleClick"/>
                    </Style>
                </ListView.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <!-- Chrome for each note block -->
                    <Border x:Name="NoteBlockChrome"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                BorderBrush="LightGray"
                BorderThickness="0 2 0 0">

                        <!-- Container Grid for note layout -->
                        <Grid x:Name="gridSurroundDataTemplate"
                  Margin="5"
                  Background="LightYellow"
                  HorizontalAlignment="Stretch">

                            <!-- Define Grid Rows -->
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <!-- Title row -->
                                <RowDefinition Height="Auto"/>
                                <!-- Text preview row -->
                            </Grid.RowDefinitions>

                            <!-- Title and Date Row -->
                            <StackPanel Orientation="Horizontal" Grid.Row="0" VerticalAlignment="Center">
                                <!-- Creation Date -->
                                <TextBlock Text="{Binding CreatedDate, StringFormat={}{0:MMM dd yyyy}, TargetNullValue=''}"
                               FontSize="11" Foreground="Gray" VerticalAlignment="Center" Margin="0,0,10,0" />

                                <!-- Title -->
                                <TextBox x:Name="txtTitle" 
                             Text="{Binding Title}" 
                             KeyUp="TitleInMainTextBox_KeyUp" 
                             FontSize="18" 
                             FontWeight="Normal" 
                             BorderThickness="0" 
                             FontFamily="Segoe UI Semibold" 
                             Background="LightYellow" 
                             HorizontalAlignment="Stretch" />
                            </StackPanel>

                            <!-- Text Preview Row -->
                            <TextBlock x:Name="txtText"
                           Grid.Row="1"
                           Text="{Binding Text}"
                           FontSize="12"
                           FontWeight="Medium"
                           FontFamily="Segoe UI"
                           TextWrapping="Wrap"
                           TextTrimming="CharacterEllipsis"
                           MaxHeight="100" 
                           HorizontalAlignment="Stretch"
                           Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ListView}}" />
            </Grid>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
                
        </ListView>



    </Grid>





</Window>
