<Window 
    x:Class="Jotter.MainWindow"
    Name="Jotter"
    Title="Jotter V 1.0.0"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:local="clr-namespace:Jotter"
    mc:Ignorable="d"
    WindowStartupLocation="Manual"
    WindowStyle="None"
    ResizeMode="CanResize"
    BorderBrush="{DynamicResource WindowBorderBrush}"
    BorderThickness="5"
    Background="{DynamicResource WindowBackgroundBrush}"
    AllowsTransparency="True"
    Height="600" 
    Width="450">






    <!-- Window Chrome -->
    <WindowChrome.WindowChrome>
        <WindowChrome     
        CaptionHeight="1"  
        CornerRadius ="15"
        ResizeBorderThickness="6"         
        GlassFrameThickness="0">
        </WindowChrome>
    </WindowChrome.WindowChrome>








    <Grid x:Name="MainGrid" Row="0" Background="{DynamicResource MainGridBackgroundBrush}" MouseDown="Window_MouseDown" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <DockPanel Background="{DynamicResource HeaderBackgroundBrush}" FlowDirection="LeftToRight" LastChildFill="False">
            <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                <!-- Add/Remove Note Buttons -->
                <Button Style="{DynamicResource ButtonClickTriggerStyle}" Name="btnAddNote" Content="+" FontWeight="Bold" Click="AddNote_Click" DockPanel.Dock="Left" Width="40" Height="40" />
                <Button Style="{DynamicResource ButtonClickTriggerStyle}" Name="btnDeleteNote" Content="-" FontWeight="Bold" Click="DeleteNote_Click" DockPanel.Dock="Left" Width="40" Height="40"/>

                <!-- Exit App Button -->
                <StackPanel Name="ExitDockPanel" DockPanel.Dock="Right">
                    <Button Style="{DynamicResource ButtonClickTriggerStyle}" Name="btnExit" FontWeight="Bold" Content="X" Click="ExitApp_Click" Width="40" Height="40" />
                </StackPanel>

                <!-- Settings Button -->
                <StackPanel Name="SettingsDockPanel" DockPanel.Dock="Right">
                    <Button Style="{DynamicResource SettingsBtnStyle}" Name="btnSettings" FontWeight="Bold" Click="AppSettings_Click" Width="40" Height="40" />
                </StackPanel>
            </DockPanel>

            <!-- Application Title -->
            <TextBlock Name="StickyNotesTitle" Padding="2,2,2,7" Text="Jotter" Foreground="{DynamicResource HeaderForegroundBrush}" FontSize="20" FontWeight="Bold"/>

            <!-- Search Box -->
            <!--Foreground="{DynamicResource SearchBoxForegroundBrush}"
                Background="{DynamicResource SearchBoxBackgroundBrush}"-->
            <TextBox x:Name="NoteManagerSearch" 
                     Text="Search..."
                     Tag="Search..."
                     Grid.Row="1" 
                     Background="{DynamicResource Button.MouseOver.Background}"
                     BorderThickness="0,0,0,1" 
                     DockPanel.Dock="Right" 
                     FontFamily="Segoe UI Semibold" 
                     Width="171" 
                     Height="20" 
                     MinWidth="2" 
                     GotFocus="NoteManagerSearch_GotFocus" 
                     LostFocus="NoteManagerSearch_LostFocus" 
                     KeyUp="NoteManagerSearch_KeyUp" />
        </DockPanel>
        <!-- End Header -->

        <!-- Note Content -->
        <!-- if you don't want the background color to bleed into infinite, put back the MaxWidth="500" -->
        <!--  VirtualizingPanel.ScrollUnit="Pixel" smooth scrolling on .NET 7 and up! -->
        <Grid x:Name="gridContainListView" Grid.Row="1" Background="{DynamicResource ContentBackgroundBrush}">
            <ListView Name="MyNotesListView" 
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch" 
                    SelectionMode="Single" 
                    ItemsSource="{Binding Notes}" 
                    SelectedItem="{Binding SelectedNote}"  
                    ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                    FontFamily="Segoe UI Semibold" 
                    VirtualizingPanel.ScrollUnit="Pixel"
                    Background="{DynamicResource ListViewBackgroundBrush}" 
                    Foreground="{DynamicResource ListViewForegroundBrush}" 
                    >


                <ListView.ContextMenu>
                    <ContextMenu Name="ContextOnItem">
                        <MenuItem Name="OpenNote" Header="Open Note" Click="OpenNote_Click" />
                        <MenuItem Name="DelNote" Header="Delete This Note" Click="DeleteNoteFromContextMenu_Click" />
                    </ContextMenu>
                </ListView.ContextMenu>

                <!-- Listview ItemContainer style is defined in themes for all visual .
                Typically, we would style it locally with the following:
                <Style TargetType="ListViewItem" x:Name="ListViewContainer">
                but since we use it in themes, we use the <Style BasedOn>...
                for VISUAL properties. The events are locally. You can see there's one
                named MouseDoubleClick
                -->
                <ListView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource MyNotesListViewContainerStyle}" TargetType="ListViewItem">
                        <!-- Add the EventSetter locally -->
                        <EventSetter Event="MouseDoubleClick" Handler="Note_DoubleClick" />
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.ItemTemplate>
                    <DataTemplate>
                        <!-- Chrome for each note block 
                        BorderThickness="0,1,0,0"
                        Borderthickness produces a thin line as a separator, but Effect give a 
                        note elevated effect.
                        Effect="{DynamicResource  NoteShadowEffect}"
                        -->
                        <Border x:Name="NoteBlockChrome" 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch" 
                                Background="{DynamicResource NoteBlockBackgroundBrush}" 
                                BorderBrush="{DynamicResource NoteBlockBorderBrush}" 
                                BorderThickness="1,1,1,1"
                                >

                            <!-- in each grid there's a note item, that's defined with the folllowing
                             -border of the note
                             -body of note
                            - text block of the note
                            -->
                            <Grid x:Name="gridSurroundDataTemplate"
                                  Margin="5"
                                  HorizontalAlignment="Stretch"
                                  Background="{DynamicResource NoteBlockBackgroundInnerBrush}"
                                  >

                                <!-- Definitiobn of the grid rows for a date stamp/title row
                            and a note text preview row
                            -->
                                <Grid.RowDefinitions >
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- Title and Date stamp row -->
                                <Grid Grid.Row="0" HorizontalAlignment="Stretch">
                                    <!-- Definition of the two rows: title and date-->
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <!-- date of created note -->
                                    <TextBlock Text="{Binding CreatedDate, 
                                            StringFormat={}{0:MMM dd yyyy}, 
                                            TargetNullValue=''}" 
                                        FontSize="11" 
                                        Foreground="{DynamicResource NoteDateForegroundBrush}" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Right" 
                                        Grid.Row="0" 
                                        Margin="0,0,32,2" />
                                    <!-- Margin of the date from the vertical scrollbar
                                        and the top right corner o fthe title.
                                        -->

                                    <!-- title of note -->
                                    <TextBox x:Name="txtTitle"
                                        Text="{Binding Title}" 
                                        KeyUp="TitleInMainTextBox_KeyUp" 
                                        FontSize="18" 
                                        FontWeight="Normal" 
                                        BorderThickness="0" 
                                        FontFamily="Segoe UI Semibold" 
                                        HorizontalAlignment="Stretch" 
                                        Background="{DynamicResource NoteTitleBackgroundBrush}" 
                                        Foreground="{DynamicResource NoteTitleForegroundBrush}" 
                                        Grid.Row="1" />
                                </Grid>


                                <!-- Note Text Preview Body -->
                                <TextBlock x:Name="txtText"
                                       Grid.Row="1"
                                       Text="{Binding Text}"
                                       FontSize="12"
                                       FontWeight="Medium"
                                       FontFamily="Segoe UI"
                                       TextWrapping="Wrap"
                                       TextTrimming="CharacterEllipsis"
                                       MaxHeight="100" 
                                       HorizontalAlignment="Stretch"
                                       Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ListView}}"
                                       Foreground="{DynamicResource NoteTextForegroundBrush}"  />
                            </Grid>
                            <!-- end of gridrow "gridSurroundDataTemplate" -->
                        </Border>

                        <!-- Tag: #NoteBlockChromeNoteSelected
                        This is the trigger for the selected note 
                        -->
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="True">
                                <Setter TargetName="NoteBlockChrome" Property="BorderBrush" Value="{DynamicResource SelectedNoteBorderBrush}" />
                                <Setter TargetName="NoteBlockChrome" Property="BorderThickness" Value="2" />
                                <Setter TargetName="NoteBlockChrome" Property="Background" Value="{DynamicResource SelectedNoteBackgroundBrush}" />
                            </DataTrigger>
                        </DataTemplate.Triggers>

                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            
            
            
            <tb:TaskbarIcon
                x:Name="NotifyIcon"
                ToolTipText="Jotter App"
                IconSource="pack://application:,,,/build/Icos/gradiant_notebook.ico"
                Visibility="Hidden"
                DoubleClickCommand="{Binding NotifyIcon_MouseDoubleClick}" >
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Show Jotter" Click="ShowApplication_Click" />
                        <MenuItem Header="Exit Jotter" Click="ExitApplication_Click" />
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>
            <!--  WPF pack URI scheme for accessing resources -->

            <!-- NotifyIcon for system tray is managed in the code-behind -->


        </Grid>
    </Grid>
</Window>
