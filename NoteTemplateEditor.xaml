<Window 
    x:Class="Jotter.NoteTemplateEditor"
        Name="NoteEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Jotter"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        ResizeMode="CanResize"
        BorderBrush="Black"
        BorderThickness="3"
        AllowsTransparency="True"
        Height="570" 
        Width="495"
         >

    <!-- Window properties -->
    <Window.Resources>

        <!-- Start of applying a style to buttons for pressed and static. the colors are grey
        The style theme starts actually under style "ButtonClickTriggerStyle"
        -->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF656A6D"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC5CACC"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FFC5CACC"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonClickTriggerStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Start of applying a style to buttons for pressed and static. the colors are grey-->

        <!-- Start of resources for settings button 
        Make sure when you add image: Properties → BuildAction='Resource'-->
        <ImageBrush x:Name="rscHambugerMenu" x:Key="rscHambugerMenu" ImageSource="/build/Icos/hamburger-menu-icon-png-white-11.jpg" />
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF656A6D"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC5CACC"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FFC5CACC"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="SettingsBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource rscHambugerMenu}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true"/>
                            <Image x:Name="image" Source="/build/Icos/hamburger-menu-icon-png-white-11.jpg" Stretch="Uniform" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!-- Change the background color when mouse is over -->
                                <Setter TargetName="border2" Property="Background" Value="{StaticResource Button.MouseOver.Background1}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border2" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border2" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border2" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border2" Value="{StaticResource Button.Disabled.Border1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End of resources for settings button -->

    </Window.Resources>

    <!-- window chrome aka the non-client area.-->
    <WindowChrome.WindowChrome>
        <WindowChrome     
        CaptionHeight="1"  
        CornerRadius ="15"
        ResizeBorderThickness="6"         
        GlassFrameThickness="0"
        >
        </WindowChrome>
    </WindowChrome.WindowChrome>

    <!-- Window_MouseDown for dragging window since windowstyle = none-->
    <Grid x:Name="MainGrid" Row="0" MouseDown="Window_MouseDown" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Header 
        Start with a dockpanel and buttons aligned and laid out. Styles are within.
        Header ends with text of the application name
        
        -->
        <DockPanel Background="#FF333333" FlowDirection="LeftToRight" LastChildFill="False">
            <DockPanel DockPanel.Dock="Top"  LastChildFill="False" >
                <!-- Add/Remove note button -->

                <!--  <Button Style="{DynamicResource ButtonClickTriggerStyle}" Name="btnAddNote" Content="+" FontWeight="Bold" Click="AddNote_Click" DockPanel.Dock="Left" Width="40" Height="40" /> -->
                <!-- <Button Style="{DynamicResource ButtonClickTriggerStyle}" Name="btnDeleteNote" Content="-" FontWeight="Bold" Click="DeleteNote_Click" DockPanel.Dock="Left" Width="40" Height="40"/> -->
                

                <!-- Exit app button -->
                <StackPanel Name="ExitDockPanel" DockPanel.Dock="Right">
                    <Button Style="{DynamicResource ButtonClickTriggerStyle}" Name="btnExit" FontWeight="Bold" Content="X" Click="ExitCurrentNote_Click" Width="40" Height="40" />
                </StackPanel>

                <!-- Settings hamburger button -->
                <!--<StackPanel Name="SettingsDockPanel" DockPanel.Dock="Right" >
                    <Button Style="{DynamicResource SettingsBtnStyle}" Name="btnSettings" Background="{StaticResource rscHambugerMenu}" FontWeight="Bold" Click="AppSettings_Click" Width="40" Height="40" />
                </StackPanel>-->
            </DockPanel>

            <!-- Application title branding button -->
            <!-- <TextBlock Name="StickyNotesTitle" Text="Jotter" Padding="2,2,2,7" Foreground="White" FontSize="20" FontWeight="Bold"/> -->
            <!-- TODO Rename this from StickyNotesTitle to NotesTitle this was a port from the mainwindow-->
            <TextBox Name="StickyNotesTitle" Text="{Binding Title, Mode=TwoWay}" MaxLength="50" KeyUp="StickyNotesTitleTextBox_KeyUp" Padding="2,2,2,7" Foreground="White" FontSize="20" FontWeight="Bold" Background="{DynamicResource Button.MouseOver.Background}" /> 
        </DockPanel>
        <!-- End of Header -->

        <!-- Note Content -->
        <Grid x:Name="gridContainsNote" Grid.Row="1" MaxWidth="900" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <RichTextBox x:Name="rchEditNote" Width="{Binding ElementName=gridContainsNote}" FontSize="16" />

        </Grid>

    </Grid>

</Window>
